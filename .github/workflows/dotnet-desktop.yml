name: mpvnet build

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - ci
    paths-ignore:
      - '*.md'
      - 'LICENSE'
      - '.gitignore'
      - '.gitattributes'
      - 'docs/**'
      - '.github/**'
      - 'src/Extensions/**'
  pull_request:
    branches: [main]
    paths-ignore:
      - '*.md'
      - 'LICENSE'
      - '.gitignore'
      - '.gitattributes'
      - 'docs/**'
      - '.github/**'
      - 'src/Extensions/**'

jobs:
  windows:
    name: Windows build
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
          update: true
          install: >
            base-devel
            wget
            p7zip

      - name: Restore NuGet packages
        shell: cmd
        run: |
          cd src
          nuget restore
        working-directory: src

      - name: Build Solution (Debug)
        shell: cmd
        run: |
          msbuild MpvNet.sln /m /p:Configuration=Debug /p:Platform="Any CPU"
        working-directory: src

      - name: Install Gettext.Tools for localization
        shell: pwsh
        run: |
          # 下载 nuget.exe
          if (-not (Test-Path "nuget.exe")) {
            Write-Host "Downloading nuget.exe..."
            Invoke-WebRequest -Uri "https://dist.nuget.org/win-x86-commandline/latest/nuget.exe" -OutFile "nuget.exe"
          }

          # 创建 tools 目录
          if (-not (Test-Path "tools")) {
            New-Item -ItemType Directory -Path "tools" | Out-Null
          }

          # 安装 Gettext.Tools
          Write-Host "Installing Gettext.Tools..."
          .\nuget.exe install Gettext.Tools -OutputDirectory ./tools -ExcludeVersion -NonInteractive

          $msgfmtExe = "$PWD\tools\Gettext.Tools\tools\bin\msgfmt.exe"
          if (Test-Path $msgfmtExe) {
            Write-Host "✅ msgfmt.exe installed at: $msgfmtExe"
          } else {
            Write-Error "❌ Failed to install Gettext.Tools or msgfmt.exe not found!"
            exit 1
          }

      - name: Generate .mo files using msgfmt.exe (inline)
        shell: pwsh
        run: |
          $poDir = "lang"
          $msgfmtExe = "$PWD\tools\Gettext.Tools\tools\bin\msgfmt.exe"

          # 检查 msgfmt 是否存在
          if (-not (Test-Path $msgfmtExe)) {
            Write-Error "msgfmt.exe not found at $msgfmtExe"
            exit 1
          }

          # 查找所有 .po 文件
          $poFiles = Get-ChildItem $poDir -Filter *.po -ErrorAction SilentlyContinue
          if ($null -eq $poFiles -or $poFiles.Count -eq 0) {
            Write-Warning "No .po files found in $poDir"
            exit 0
          }

          foreach ($poFile in $poFiles) {
            $lang = $poFile.BaseName
            $moDir = "$poDir\$lang\LC_MESSAGES"
            $moPath = "$moDir\mpvnet.mo"

            # 创建输出目录
            if (-not (Test-Path $moDir)) {
              New-Item -ItemType Directory -Path $moDir -Force | Out-Null
            }

            Write-Host "Compiling '$($poFile.Name)' -> '$moPath'"

            # 调用 msgfmt.exe
            & $msgfmtExe --output-file="$moPath" $poFile.FullName

            if ($LASTEXITCODE -ne 0) {
              Write-Error "Failed to compile $($poFile.Name)"
              exit 1
            } else {
              Write-Host "✅ Generated $moPath"
            }
          }

      - name: Download libmpv
        shell: msys2 {0}
        run: |
          wget -nv -O libmpv.7z https://bgithub.xyz/zhongfly/mpv-winbuild/releases/download/2025-05-03-e663cbc/mpv-dev-x86_64-20250503-git-e663cbc.7z
          7z x -y libmpv.7z -olibmpv
          cp -f libmpv/libmpv-2.dll src/MpvNet.Windows/bin/Debug/libmpv-2.dll || echo "libmpv copy skipped"

      - name: Download MediaInfo
        shell: msys2 {0}
        run: |
          wget -nv -O MediaInfo.7z https://mediaarea.net/download/binary/libmediainfo0/24.03/MediaInfo_DLL_24.03_Windows_x64_WithoutInstaller.7z
          7z x -y MediaInfo.7z -oMediaInfo
          cp -f MediaInfo/MediaInfo.dll src/MpvNet.Windows/bin/Debug/MediaInfo.dll || echo "MediaInfo copy skipped"

      - name: Download mpvnet.com
        shell: msys2 {0}
        run: |
          wget -nv -O mpvnet.com https://bgithub.xyz/mpvnet-player/file-host/releases/download/tag/mpvnet.com.txt
          cp -f mpvnet.com src/MpvNet.Windows/bin/Debug/mpvnet.com || echo "mpvnet.com copy skipped"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mpv.net-win64
          path: src/MpvNet.Windows/bin/Debug/
          if-no-files-found: warn
